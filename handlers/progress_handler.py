from aiogram import Router, types, F
from utils.text_manager import get_user_texts
import datetime

router = Router()

@router.message(F.text == "–ü—Ä–æ–≥—Ä–µ—Å—Å")
async def show_progress(message: types.Message):
    texts = get_user_texts(message.from_user.id)
    if not texts:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤.")
        return

    response = "üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–µ–∫—Å—Ç—É:</b>\n"
    for idx, text_data in enumerate(texts, 1):
        learned_lines = text_data.get('learned_lines', 0)
        total_lines = text_data.get('total_lines', 0)
        time_started = text_data.get('time_started', '‚Äî')
        if time_started != '‚Äî':
            time_started = datetime.datetime.fromtimestamp(time_started).strftime('%Y-%m-%d %H:%M')

        response += (
            f"\n<b>–¢–µ–∫—Å—Ç {idx}:</b>\n"
            f"–°—Ç—Ä–æ–∫ –≤—ã—É—á–µ–Ω–æ: {learned_lines}\n"
            f"–°—Ç—Ä–æ–∫ –Ω–µ –≤—ã—É—á–µ–Ω–æ: {total_lines - learned_lines}\n"
            f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–∑—É—á–µ–Ω–∏—è: {time_started}\n"
        )
    await message.answer(response)
